"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.8.6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAgentReplyEntityToolCallsInner = instanceOfAgentReplyEntityToolCallsInner;
exports.AgentReplyEntityToolCallsInnerFromJSON = AgentReplyEntityToolCallsInnerFromJSON;
exports.AgentReplyEntityToolCallsInnerFromJSONTyped = AgentReplyEntityToolCallsInnerFromJSONTyped;
exports.AgentReplyEntityToolCallsInnerToJSON = AgentReplyEntityToolCallsInnerToJSON;
exports.AgentReplyEntityToolCallsInnerToJSONTyped = AgentReplyEntityToolCallsInnerToJSONTyped;
/**
 * Check if a given object implements the AgentReplyEntityToolCallsInner interface.
 */
function instanceOfAgentReplyEntityToolCallsInner(value) {
    if (!('toolCallId' in value) || value['toolCallId'] === undefined)
        return false;
    if (!('toolName' in value) || value['toolName'] === undefined)
        return false;
    if (!('input' in value) || value['input'] === undefined)
        return false;
    return true;
}
function AgentReplyEntityToolCallsInnerFromJSON(json) {
    return AgentReplyEntityToolCallsInnerFromJSONTyped(json, false);
}
function AgentReplyEntityToolCallsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'toolCallId': json['toolCallId'],
        'toolName': json['toolName'],
        'input': json['input'],
    };
}
function AgentReplyEntityToolCallsInnerToJSON(json) {
    return AgentReplyEntityToolCallsInnerToJSONTyped(json, false);
}
function AgentReplyEntityToolCallsInnerToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'toolCallId': value['toolCallId'],
        'toolName': value['toolName'],
        'input': value['input'],
    };
}
