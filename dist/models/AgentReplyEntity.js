"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAgentReplyEntity = instanceOfAgentReplyEntity;
exports.AgentReplyEntityFromJSON = AgentReplyEntityFromJSON;
exports.AgentReplyEntityFromJSONTyped = AgentReplyEntityFromJSONTyped;
exports.AgentReplyEntityToJSON = AgentReplyEntityToJSON;
exports.AgentReplyEntityToJSONTyped = AgentReplyEntityToJSONTyped;
var AgentReplyEntityDocument_1 = require("./AgentReplyEntityDocument");
var AgentReplyEntityImage_1 = require("./AgentReplyEntityImage");
var AgentReplyEntityText_1 = require("./AgentReplyEntityText");
/**
 * Check if a given object implements the AgentReplyEntity interface.
 */
function instanceOfAgentReplyEntity(value) {
    return true;
}
function AgentReplyEntityFromJSON(json) {
    return AgentReplyEntityFromJSONTyped(json, false);
}
function AgentReplyEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'document': json['document'] == null ? undefined : (0, AgentReplyEntityDocument_1.AgentReplyEntityDocumentFromJSON)(json['document']),
        'image': json['image'] == null ? undefined : (0, AgentReplyEntityImage_1.AgentReplyEntityImageFromJSON)(json['image']),
        'text': json['text'] == null ? undefined : (0, AgentReplyEntityText_1.AgentReplyEntityTextFromJSON)(json['text']),
        'markMessage': json['markMessage'] == null ? undefined : json['markMessage'],
    };
}
function AgentReplyEntityToJSON(json) {
    return AgentReplyEntityToJSONTyped(json, false);
}
function AgentReplyEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'document': (0, AgentReplyEntityDocument_1.AgentReplyEntityDocumentToJSON)(value['document']),
        'image': (0, AgentReplyEntityImage_1.AgentReplyEntityImageToJSON)(value['image']),
        'text': (0, AgentReplyEntityText_1.AgentReplyEntityTextToJSON)(value['text']),
        'markMessage': value['markMessage'],
    };
}
