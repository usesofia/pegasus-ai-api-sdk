"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfContactEntityAddress = instanceOfContactEntityAddress;
exports.ContactEntityAddressFromJSON = ContactEntityAddressFromJSON;
exports.ContactEntityAddressFromJSONTyped = ContactEntityAddressFromJSONTyped;
exports.ContactEntityAddressToJSON = ContactEntityAddressToJSON;
exports.ContactEntityAddressToJSONTyped = ContactEntityAddressToJSONTyped;
/**
 * Check if a given object implements the ContactEntityAddress interface.
 */
function instanceOfContactEntityAddress(value) {
    return true;
}
function ContactEntityAddressFromJSON(json) {
    return ContactEntityAddressFromJSONTyped(json, false);
}
function ContactEntityAddressFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cep': json['cep'] == null ? undefined : json['cep'],
        'street': json['street'] == null ? undefined : json['street'],
        'number': json['number'] == null ? undefined : json['number'],
        'complement': json['complement'] == null ? undefined : json['complement'],
        'neighborhood': json['neighborhood'] == null ? undefined : json['neighborhood'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'] == null ? undefined : json['country'],
    };
}
function ContactEntityAddressToJSON(json) {
    return ContactEntityAddressToJSONTyped(json, false);
}
function ContactEntityAddressToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'cep': value['cep'],
        'street': value['street'],
        'number': value['number'],
        'complement': value['complement'],
        'neighborhood': value['neighborhood'],
        'city': value['city'],
        'state': value['state'],
        'country': value['country'],
    };
}
