"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAgentReplyEntityDocument = instanceOfAgentReplyEntityDocument;
exports.AgentReplyEntityDocumentFromJSON = AgentReplyEntityDocumentFromJSON;
exports.AgentReplyEntityDocumentFromJSONTyped = AgentReplyEntityDocumentFromJSONTyped;
exports.AgentReplyEntityDocumentToJSON = AgentReplyEntityDocumentToJSON;
exports.AgentReplyEntityDocumentToJSONTyped = AgentReplyEntityDocumentToJSONTyped;
/**
 * Check if a given object implements the AgentReplyEntityDocument interface.
 */
function instanceOfAgentReplyEntityDocument(value) {
    if (!('signedUrl' in value) || value['signedUrl'] === undefined)
        return false;
    if (!('fileName' in value) || value['fileName'] === undefined)
        return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined)
        return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined)
        return false;
    return true;
}
function AgentReplyEntityDocumentFromJSON(json) {
    return AgentReplyEntityDocumentFromJSONTyped(json, false);
}
function AgentReplyEntityDocumentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'signedUrl': json['signedUrl'],
        'fileName': json['fileName'],
        'mimeType': json['mimeType'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'fileSize': json['fileSize'],
    };
}
function AgentReplyEntityDocumentToJSON(json) {
    return AgentReplyEntityDocumentToJSONTyped(json, false);
}
function AgentReplyEntityDocumentToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'signedUrl': value['signedUrl'],
        'fileName': value['fileName'],
        'mimeType': value['mimeType'],
        'caption': value['caption'],
        'fileSize': value['fileSize'],
    };
}
