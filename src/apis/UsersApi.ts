/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  UserEntity,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    UserEntityFromJSON,
    UserEntityToJSON,
} from '../models/index';

export interface FindUserByMainIdRequest {
    mainId: string;
}

/**
 * UsersApi - interface
 * 
 * @export
 * @interface UsersApiInterface
 */
export interface UsersApiInterface {
    /**
     * 
     * @summary Encontra um usuário pelo ID no clerk.
     * @param {string} mainId O ID do usuário no clerk.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApiInterface
     */
    findUserByMainIdRaw(requestParameters: FindUserByMainIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserEntity>>;

    /**
     * Encontra um usuário pelo ID no clerk.
     */
    findUserByMainId(requestParameters: FindUserByMainIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserEntity>;

}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI implements UsersApiInterface {

    /**
     * Encontra um usuário pelo ID no clerk.
     */
    async findUserByMainIdRaw(requestParameters: FindUserByMainIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserEntity>> {
        if (requestParameters['mainId'] == null) {
            throw new runtime.RequiredError(
                'mainId',
                'Required parameter "mainId" was null or undefined when calling findUserByMainId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/internal/users/{mainId}`;
        urlPath = urlPath.replace(`{${"mainId"}}`, encodeURIComponent(String(requestParameters['mainId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserEntityFromJSON(jsonValue));
    }

    /**
     * Encontra um usuário pelo ID no clerk.
     */
    async findUserByMainId(requestParameters: FindUserByMainIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserEntity> {
        const response = await this.findUserByMainIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
