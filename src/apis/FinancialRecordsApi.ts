/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  ExtractFinancialRecordFromFileRequestBodyDto,
  FinancialRecordEntity,
  FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntity,
  JobRequestPayloadEntity,
  StartBulkCreateExtractionForWebAppRequestBodyDto,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    ExtractFinancialRecordFromFileRequestBodyDtoFromJSON,
    ExtractFinancialRecordFromFileRequestBodyDtoToJSON,
    FinancialRecordEntityFromJSON,
    FinancialRecordEntityToJSON,
    FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntityFromJSON,
    FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntityToJSON,
    JobRequestPayloadEntityFromJSON,
    JobRequestPayloadEntityToJSON,
    StartBulkCreateExtractionForWebAppRequestBodyDtoFromJSON,
    StartBulkCreateExtractionForWebAppRequestBodyDtoToJSON,
} from '../models/index';

export interface ExtractFinancialRecordFromFileRequest {
    extractFinancialRecordFromFileRequestBodyDto: ExtractFinancialRecordFromFileRequestBodyDto;
}

export interface ProcessFinancialRecordsBulkCreateExtractionForWebAppRequest {
    jobRequestPayloadEntity: JobRequestPayloadEntity;
}

export interface StartFinancialRecordsBulkCreateExtractionForWebAppRequest {
    startBulkCreateExtractionForWebAppRequestBodyDto: StartBulkCreateExtractionForWebAppRequestBodyDto;
}

/**
 * FinancialRecordsApi - interface
 * 
 * @export
 * @interface FinancialRecordsApiInterface
 */
export interface FinancialRecordsApiInterface {
    /**
     * 
     * @summary Extrai os dados de lançamento financeiro a partir do arquivo.
     * @param {ExtractFinancialRecordFromFileRequestBodyDto} extractFinancialRecordFromFileRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    extractFinancialRecordFromFileRaw(requestParameters: ExtractFinancialRecordFromFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordEntity>>;

    /**
     * Extrai os dados de lançamento financeiro a partir do arquivo.
     */
    extractFinancialRecordFromFile(requestParameters: ExtractFinancialRecordFromFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordEntity>;

    /**
     * 
     * @summary Processa os dados do arquivo.
     * @param {JobRequestPayloadEntity} jobRequestPayloadEntity 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    processFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters: ProcessFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * Processa os dados do arquivo.
     */
    processFinancialRecordsBulkCreateExtractionForWebApp(requestParameters: ProcessFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary Inicia a extração de lançamentos financeiros em massa a partir do web app.
     * @param {StartBulkCreateExtractionForWebAppRequestBodyDto} startBulkCreateExtractionForWebAppRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    startFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters: StartFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntity>>;

    /**
     * Inicia a extração de lançamentos financeiros em massa a partir do web app.
     */
    startFinancialRecordsBulkCreateExtractionForWebApp(requestParameters: StartFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntity>;

}

/**
 * 
 */
export class FinancialRecordsApi extends runtime.BaseAPI implements FinancialRecordsApiInterface {

    /**
     * Extrai os dados de lançamento financeiro a partir do arquivo.
     */
    async extractFinancialRecordFromFileRaw(requestParameters: ExtractFinancialRecordFromFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordEntity>> {
        if (requestParameters['extractFinancialRecordFromFileRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'extractFinancialRecordFromFileRequestBodyDto',
                'Required parameter "extractFinancialRecordFromFileRequestBodyDto" was null or undefined when calling extractFinancialRecordFromFile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/external/financial-records/extract-from-file`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ExtractFinancialRecordFromFileRequestBodyDtoToJSON(requestParameters['extractFinancialRecordFromFileRequestBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FinancialRecordEntityFromJSON(jsonValue));
    }

    /**
     * Extrai os dados de lançamento financeiro a partir do arquivo.
     */
    async extractFinancialRecordFromFile(requestParameters: ExtractFinancialRecordFromFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordEntity> {
        const response = await this.extractFinancialRecordFromFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Processa os dados do arquivo.
     */
    async processFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters: ProcessFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['jobRequestPayloadEntity'] == null) {
            throw new runtime.RequiredError(
                'jobRequestPayloadEntity',
                'Required parameter "jobRequestPayloadEntity" was null or undefined when calling processFinancialRecordsBulkCreateExtractionForWebApp().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/internal/queues/financial-records-bulk-create-extraction-for-web-app`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: JobRequestPayloadEntityToJSON(requestParameters['jobRequestPayloadEntity']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Processa os dados do arquivo.
     */
    async processFinancialRecordsBulkCreateExtractionForWebApp(requestParameters: ProcessFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.processFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters, initOverrides);
    }

    /**
     * Inicia a extração de lançamentos financeiros em massa a partir do web app.
     */
    async startFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters: StartFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntity>> {
        if (requestParameters['startBulkCreateExtractionForWebAppRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'startBulkCreateExtractionForWebAppRequestBodyDto',
                'Required parameter "startBulkCreateExtractionForWebAppRequestBodyDto" was null or undefined when calling startFinancialRecordsBulkCreateExtractionForWebApp().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/external/financial-records/bulk-create-extraction-for-web-app/start`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StartBulkCreateExtractionForWebAppRequestBodyDtoToJSON(requestParameters['startBulkCreateExtractionForWebAppRequestBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntityFromJSON(jsonValue));
    }

    /**
     * Inicia a extração de lançamentos financeiros em massa a partir do web app.
     */
    async startFinancialRecordsBulkCreateExtractionForWebApp(requestParameters: StartFinancialRecordsBulkCreateExtractionForWebAppRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsBulkCreateExtractionForWebAppJobRequestEntity> {
        const response = await this.startFinancialRecordsBulkCreateExtractionForWebAppRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
