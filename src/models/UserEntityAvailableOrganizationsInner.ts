/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserEntityAvailableOrganizationsInner
 */
export interface UserEntityAvailableOrganizationsInner {
    /**
     * Identificador da organização no clerk.
     * @type {string}
     * @memberof UserEntityAvailableOrganizationsInner
     */
    mainId: string;
    /**
     * Nome da organização.
     * @type {string}
     * @memberof UserEntityAvailableOrganizationsInner
     */
    name: string;
}

/**
 * Check if a given object implements the UserEntityAvailableOrganizationsInner interface.
 */
export function instanceOfUserEntityAvailableOrganizationsInner(value: object): value is UserEntityAvailableOrganizationsInner {
    if (!('mainId' in value) || value['mainId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function UserEntityAvailableOrganizationsInnerFromJSON(json: any): UserEntityAvailableOrganizationsInner {
    return UserEntityAvailableOrganizationsInnerFromJSONTyped(json, false);
}

export function UserEntityAvailableOrganizationsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEntityAvailableOrganizationsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'mainId': json['mainId'],
        'name': json['name'],
    };
}

export function UserEntityAvailableOrganizationsInnerToJSON(json: any): UserEntityAvailableOrganizationsInner {
    return UserEntityAvailableOrganizationsInnerToJSONTyped(json, false);
}

export function UserEntityAvailableOrganizationsInnerToJSONTyped(value?: UserEntityAvailableOrganizationsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mainId': value['mainId'],
        'name': value['name'],
    };
}

