/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AgentReplyEntityImage
 */
export interface AgentReplyEntityImage {
    /**
     * 
     * @type {string}
     * @memberof AgentReplyEntityImage
     */
    signedUrl: string;
    /**
     * 
     * @type {string}
     * @memberof AgentReplyEntityImage
     */
    mimeType: string;
    /**
     * 
     * @type {string}
     * @memberof AgentReplyEntityImage
     */
    caption?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AgentReplyEntityImage
     */
    fileSize: number;
}

/**
 * Check if a given object implements the AgentReplyEntityImage interface.
 */
export function instanceOfAgentReplyEntityImage(value: object): value is AgentReplyEntityImage {
    if (!('signedUrl' in value) || value['signedUrl'] === undefined) return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    return true;
}

export function AgentReplyEntityImageFromJSON(json: any): AgentReplyEntityImage {
    return AgentReplyEntityImageFromJSONTyped(json, false);
}

export function AgentReplyEntityImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentReplyEntityImage {
    if (json == null) {
        return json;
    }
    return {
        
        'signedUrl': json['signedUrl'],
        'mimeType': json['mimeType'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'fileSize': json['fileSize'],
    };
}

export function AgentReplyEntityImageToJSON(json: any): AgentReplyEntityImage {
    return AgentReplyEntityImageToJSONTyped(json, false);
}

export function AgentReplyEntityImageToJSONTyped(value?: AgentReplyEntityImage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'signedUrl': value['signedUrl'],
        'mimeType': value['mimeType'],
        'caption': value['caption'],
        'fileSize': value['fileSize'],
    };
}

