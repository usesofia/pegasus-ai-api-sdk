/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage } from './GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage';
import {
    GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageFromJSON,
    GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageFromJSONTyped,
    GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageToJSON,
    GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageToJSONTyped,
} from './GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage';

/**
 * 
 * @export
 * @interface GenerateBestSuggestedActionRequestBodyDtoMessageContext
 */
export interface GenerateBestSuggestedActionRequestBodyDtoMessageContext {
    /**
     * ID do chat.
     * @type {string}
     * @memberof GenerateBestSuggestedActionRequestBodyDtoMessageContext
     */
    chatId: string;
    /**
     * Título do chat.
     * @type {string}
     * @memberof GenerateBestSuggestedActionRequestBodyDtoMessageContext
     */
    chatTitle?: string | null;
    /**
     * Canal da mensagem.
     * @type {string}
     * @memberof GenerateBestSuggestedActionRequestBodyDtoMessageContext
     */
    channel: GenerateBestSuggestedActionRequestBodyDtoMessageContextChannelEnum;
    /**
     * 
     * @type {GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage}
     * @memberof GenerateBestSuggestedActionRequestBodyDtoMessageContext
     */
    currentMessage: GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage;
    /**
     * 
     * @type {Array<GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage>}
     * @memberof GenerateBestSuggestedActionRequestBodyDtoMessageContext
     */
    lastMessages: Array<GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessage>;
}


/**
 * @export
 */
export const GenerateBestSuggestedActionRequestBodyDtoMessageContextChannelEnum = {
    Whatsapp: 'whatsapp',
    Email: 'email'
} as const;
export type GenerateBestSuggestedActionRequestBodyDtoMessageContextChannelEnum = typeof GenerateBestSuggestedActionRequestBodyDtoMessageContextChannelEnum[keyof typeof GenerateBestSuggestedActionRequestBodyDtoMessageContextChannelEnum];


/**
 * Check if a given object implements the GenerateBestSuggestedActionRequestBodyDtoMessageContext interface.
 */
export function instanceOfGenerateBestSuggestedActionRequestBodyDtoMessageContext(value: object): value is GenerateBestSuggestedActionRequestBodyDtoMessageContext {
    if (!('chatId' in value) || value['chatId'] === undefined) return false;
    if (!('channel' in value) || value['channel'] === undefined) return false;
    if (!('currentMessage' in value) || value['currentMessage'] === undefined) return false;
    if (!('lastMessages' in value) || value['lastMessages'] === undefined) return false;
    return true;
}

export function GenerateBestSuggestedActionRequestBodyDtoMessageContextFromJSON(json: any): GenerateBestSuggestedActionRequestBodyDtoMessageContext {
    return GenerateBestSuggestedActionRequestBodyDtoMessageContextFromJSONTyped(json, false);
}

export function GenerateBestSuggestedActionRequestBodyDtoMessageContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateBestSuggestedActionRequestBodyDtoMessageContext {
    if (json == null) {
        return json;
    }
    return {
        
        'chatId': json['chatId'],
        'chatTitle': json['chatTitle'] == null ? undefined : json['chatTitle'],
        'channel': json['channel'],
        'currentMessage': GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageFromJSON(json['currentMessage']),
        'lastMessages': ((json['lastMessages'] as Array<any>).map(GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageFromJSON)),
    };
}

export function GenerateBestSuggestedActionRequestBodyDtoMessageContextToJSON(json: any): GenerateBestSuggestedActionRequestBodyDtoMessageContext {
    return GenerateBestSuggestedActionRequestBodyDtoMessageContextToJSONTyped(json, false);
}

export function GenerateBestSuggestedActionRequestBodyDtoMessageContextToJSONTyped(value?: GenerateBestSuggestedActionRequestBodyDtoMessageContext | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chatId': value['chatId'],
        'chatTitle': value['chatTitle'],
        'channel': value['channel'],
        'currentMessage': GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageToJSON(value['currentMessage']),
        'lastMessages': ((value['lastMessages'] as Array<any>).map(GenerateBestSuggestedActionRequestBodyDtoMessageContextCurrentMessageToJSON)),
    };
}

