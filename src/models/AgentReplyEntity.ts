/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus ai-api
 * Api do sistema Pegasus com endpoints para interação com os modelos de AI usados no sistema.
 *
 * The version of the OpenAPI document: 1.8.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentReplyEntityDocument } from './AgentReplyEntityDocument';
import {
    AgentReplyEntityDocumentFromJSON,
    AgentReplyEntityDocumentFromJSONTyped,
    AgentReplyEntityDocumentToJSON,
    AgentReplyEntityDocumentToJSONTyped,
} from './AgentReplyEntityDocument';
import type { AgentReplyEntityToolCallsInner } from './AgentReplyEntityToolCallsInner';
import {
    AgentReplyEntityToolCallsInnerFromJSON,
    AgentReplyEntityToolCallsInnerFromJSONTyped,
    AgentReplyEntityToolCallsInnerToJSON,
    AgentReplyEntityToolCallsInnerToJSONTyped,
} from './AgentReplyEntityToolCallsInner';
import type { AgentReplyEntityImage } from './AgentReplyEntityImage';
import {
    AgentReplyEntityImageFromJSON,
    AgentReplyEntityImageFromJSONTyped,
    AgentReplyEntityImageToJSON,
    AgentReplyEntityImageToJSONTyped,
} from './AgentReplyEntityImage';
import type { AgentReplyEntityText } from './AgentReplyEntityText';
import {
    AgentReplyEntityTextFromJSON,
    AgentReplyEntityTextFromJSONTyped,
    AgentReplyEntityTextToJSON,
    AgentReplyEntityTextToJSONTyped,
} from './AgentReplyEntityText';

/**
 * 
 * @export
 * @interface AgentReplyEntity
 */
export interface AgentReplyEntity {
    /**
     * 
     * @type {AgentReplyEntityDocument}
     * @memberof AgentReplyEntity
     */
    document?: AgentReplyEntityDocument | null;
    /**
     * 
     * @type {AgentReplyEntityImage}
     * @memberof AgentReplyEntity
     */
    image?: AgentReplyEntityImage | null;
    /**
     * 
     * @type {AgentReplyEntityText}
     * @memberof AgentReplyEntity
     */
    text?: AgentReplyEntityText | null;
    /**
     * As chamadas de ferramentas feitas pela Sofia para gerar a resposta.
     * @type {Array<AgentReplyEntityToolCallsInner>}
     * @memberof AgentReplyEntity
     */
    toolCalls: Array<AgentReplyEntityToolCallsInner>;
    /**
     * 
     * @type {boolean}
     * @memberof AgentReplyEntity
     */
    markMessage?: boolean;
}

/**
 * Check if a given object implements the AgentReplyEntity interface.
 */
export function instanceOfAgentReplyEntity(value: object): value is AgentReplyEntity {
    if (!('toolCalls' in value) || value['toolCalls'] === undefined) return false;
    return true;
}

export function AgentReplyEntityFromJSON(json: any): AgentReplyEntity {
    return AgentReplyEntityFromJSONTyped(json, false);
}

export function AgentReplyEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentReplyEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'document': json['document'] == null ? undefined : AgentReplyEntityDocumentFromJSON(json['document']),
        'image': json['image'] == null ? undefined : AgentReplyEntityImageFromJSON(json['image']),
        'text': json['text'] == null ? undefined : AgentReplyEntityTextFromJSON(json['text']),
        'toolCalls': ((json['toolCalls'] as Array<any>).map(AgentReplyEntityToolCallsInnerFromJSON)),
        'markMessage': json['markMessage'] == null ? undefined : json['markMessage'],
    };
}

export function AgentReplyEntityToJSON(json: any): AgentReplyEntity {
    return AgentReplyEntityToJSONTyped(json, false);
}

export function AgentReplyEntityToJSONTyped(value?: AgentReplyEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document': AgentReplyEntityDocumentToJSON(value['document']),
        'image': AgentReplyEntityImageToJSON(value['image']),
        'text': AgentReplyEntityTextToJSON(value['text']),
        'toolCalls': ((value['toolCalls'] as Array<any>).map(AgentReplyEntityToolCallsInnerToJSON)),
        'markMessage': value['markMessage'],
    };
}

